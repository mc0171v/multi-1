buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.3.4'
    }
}

task(updateSubs) << {
  def versionToBeUpdated
  if (project.version.contains('SNAPSHOT')) {
    versionToBeUpdated=releaseVersion
  } else {
    versionToBeUpdated=prereleaseVersion
  }
  println "Updating sub projects $project.projectDir"
  FileTree tree = fileTree(project.projectDir).exclude(['build.gradle'])
  //.includes(['properties.gradle','Dockerfile'])
  tree.each {File file ->
    println "Tree file name: file"
    if (file.text.contains(versionToBeUpdated)) {
      println "Tree file contains: $versionToBeUpdated replacing with $project.version"
      def updated = file.text.replaceAll(versionToBeUpdated,project.version)
      file.write(updated)
      println "Tree file updated: $versionToBeUpdated to $project.version"
    }
  }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'net.researchgate.release'

    repositories {
        mavenCentral()
        jcenter()
    }

    release {
        tagTemplate = '$name-$version'
        failOnSnapshotDependencies = false
    }

    task(startMessage) << {
        println 'starting build'
    }

    task(printVersion) << {
        println "Project version is " + project.version
    }
    
    checkUpdateNeeded.dependsOn printVersion
    unSnapshotVersion.dependsOn printVersion
    beforeReleaseBuild.dependsOn startMessage,updateSubs
    afterReleaseBuild.dependsOn printVersion,build
    commitNewVersion.dependsOn printVersion,updateSubs
}
